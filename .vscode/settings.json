{
    "C_Cpp.intelliSenseEngine": "Tag Parser",
    "idf.adapterTargetName": "esp32",
    "idf.customExtraPaths": "F:\\Espressif\\tools\\xtensa-esp32-elf\\esp-2021r2-patch2-8.4.0\\xtensa-esp32-elf\\bin;F:\\Espressif\\tools\\xtensa-esp32s2-elf\\esp-2021r2-patch2-8.4.0\\xtensa-esp32s2-elf\\bin;F:\\Espressif\\tools\\xtensa-esp32s3-elf\\esp-2021r2-patch2-8.4.0\\xtensa-esp32s3-elf\\bin;F:\\Espressif\\tools\\riscv32-esp-elf\\esp-2021r2-patch2-8.4.0\\riscv32-esp-elf\\bin;F:\\Espressif\\tools\\esp32ulp-elf\\2.28.51-esp-20191205\\esp32ulp-elf-binutils\\bin;F:\\Espressif\\tools\\esp32s2ulp-elf\\2.28.51-esp-20191205\\esp32s2ulp-elf-binutils\\bin;F:\\Espressif\\tools\\cmake\\3.20.3\\bin;F:\\Espressif\\tools\\openocd-esp32\\v0.11.0-esp32-20211220\\openocd-esp32\\bin;F:\\Espressif\\tools\\ninja\\1.10.2;F:\\Espressif\\tools\\idf-exe\\1.0.3;F:\\Espressif\\tools\\ccache\\4.3\\ccache-4.3-windows-64;F:\\Espressif\\tools\\dfu-util\\0.9\\dfu-util-0.9-win64",
    "idf.customExtraVars": "{\"OPENOCD_SCRIPTS\":\"F:\\\\Espressif\\\\tools\\\\openocd-esp32\\\\v0.11.0-esp32-20211220/openocd-esp32/share/openocd/scripts\",\"IDF_CCACHE_ENABLE\":\"1\"}",
    "idf.espIdfPathWin": "F:/Espressif/frameworks/esp-idf-v4.4/",
    "idf.openOcdConfigs": [
        "interface/ftdi/esp32_devkitj_v1.cfg",
        "target/esp32.cfg"
    ],
    "idf.portWin": "COM9",
    "idf.pythonBinPathWin": "F:/Espressif/python_env/idf4.4_py3.8_env/Scripts/python.exe",
    "idf.toolsPathWin": "F:\\Espressif",
    "files.associations": {
		"sdkconfig.h": "c",
		"gpio.h": "c",
		"led_strip.h": "c",
		"freertos.h": "c",
		"stdio.h": "c",
		"ff.h": "c",
		"esp_log.h": "c",
		"esp_rom_sys.h": "c",
		"esp_err.h": "c",
		"*.inc": "c",
		"lvgl.h": "c",
		"lv_fsdrv.h": "c",
		"esp_spi_flash.h": "c",
		"lv_png.h": "c",
		"*.tcc": "c",
		"optional": "c",
		"istream": "c",
		"ostream": "c",
		"ratio": "c",
		"system_error": "c",
		"array": "c",
		"functional": "c",
		"regex": "c",
		"tuple": "c",
		"type_traits": "c",
		"utility": "c",
		"lv_demos.h": "c",
		"typeinfo": "c",
		"ui_display.h": "c",
		"lvgl_helpers.h": "c",
		"string": "c",
		"string.h": "c",
		"future": "c",
		"cstring": "c"
	},
    "fileheader.configObj": {
		"createFileTime": true,
		"language": {
			"languagetest": {
				"head": "/$$",
				"middle": " $ @",
				"end": " $/",
				"functionSymbol": {
					"head": "/** ",
					"middle": " * @",
					"end": " */"
				},
				"functionParams": "js"
			}
		},
		"autoAdd": true,
		"autoAddLine": 100,
		"autoAlready": true,
		"annotationStr": {
			"head": "/*",
			"middle": " * @",
			"end": " */",
			"use": false
		},
		"headInsertLine": {
			"php": 2,
			"sh": 2
		},
		"beforeAnnotation": {
			"文件后缀": "该文件后缀的头部注释之前添加某些内容"
		},
		"afterAnnotation": {
			"文件后缀": "该文件后缀的头部注释之后添加某些内容"
		},
		"specialOptions": {
			"特殊字段": "自定义比如LastEditTime/LastEditors"
		},
		"switch": {
			"newlineAddAnnotation": true
		},
		"supportAutoLanguage": [],
		"prohibitAutoAdd": [
			"json"
		],
		"folderBlacklist": [
			"node_modules",
			"文件夹禁止自动添加头部注释"
		],
		"prohibitItemAutoAdd": [
			"项目的全称, 整个项目禁止自动添加头部注释, 可以使用快捷键添加"
		],
		"moveCursor": true,
		"dateFormat": "YYYY-MM-DD HH:mm:ss",
		"atSymbol": [
			"@",
			"@"
		],
		"atSymbolObj": {
			"文件后缀": [
				"头部注释@符号",
				"函数注释@符号"
			]
		},
		"colon": [
			": ",
			": "
		],
		"colonObj": {
			"文件后缀": [
				"头部注释冒号",
				"函数注释冒号"
			]
		},
		"filePathColon": "路径分隔符替换",
		"showErrorMessage": false,
		"writeLog": false,
		"wideSame": false,
		"wideNum": 13,
		"functionWideNum": 0,
		"CheckFileChange": false,
		"createHeader": true,
		"useWorker": false,
		"designAddHead": false,
		"headDesignName": "random",
		"headDesign": false,
		"cursorModeInternalAll": {},
		"openFunctionParamsCheck": true,
		"functionParamsShape": [
			"{",
			"}"
		],
		"functionBlankSpaceAll": {},
		"functionTypeSymbol": "*",
		"typeParamOrder": "type param",
		"customHasHeadEnd": {},
		"throttleTime": 60000
	},
    // 头部注释
    "fileheader.customMade": {
        // Author字段是文件的创建者 可以在specialOptions中更改特殊属性
        // 公司项目和个人项目可以配置不同的用户名与邮箱 搜索: gitconfig includeIf  比如: https://ayase.moe/2021/03/09/customized-git-config/
        // 自动提取当前git config中的: 用户名、邮箱
        // "Author": "git config user.name && git config user.email", // 同时获取用户名与邮箱
        // "Author": "git config user.name", // 仅获取用户名
        // "Author": "git config user.email", // 仅获取邮箱
        "Author": "Breakfast759", // 写死的固定值 不从git config中获取
        "Date": "Do not edit", // 文件创建时间(不变)
        // LastEditors、LastEditTime、FilePath将会自动更新 如果觉得时间更新的太频繁可以使用throttleTime(默认为1分钟)配置更改更新时间。
        "LastEditors": "Breakfast759",
		// "LastEditors": "git config user.name && git config user.email", // 文件最后编辑者 与Author字段一致
        // 由于编辑文件就会变更最后编辑时间，多人协作中合并的时候会导致merge
        // 可以将时间颗粒度改为周、或者月，这样冲突就减少很多。搜索变更时间格式: dateFormat
        "LastEditTime": "Do not edit", // 文件最后编辑时间
        // 输出相对路径，类似: /文件夹名称/src/index.js
        "FilePath": "Do not edit", // 文件在项目中的相对路径 自动更新
        // 插件会自动将光标移动到Description选项中 方便输入 Description字段可以在specialOptions更改
        "Description": "", // 介绍文件的作用、文件的入参、出参。
        // custom_string_obkoro1~custom_string_obkoro100都可以输出自定义信息
        // 可以设置多条自定义信息 设置个性签名、留下QQ、微信联系方式、输入空行等
        "custom_string_obkoro1": "", 
        // 版权声明 保留文件所有权利 自动替换年份 获取git配置的用户名和邮箱
        // 版权声明获取git配置, 与Author字段一致: ${git_name} ${git_email} ${git_name_email}
        // "custom_string_obkoro1_copyright": "Copyright (c) ${now_year} by ${git_name_email}, All Rights Reserved. "
        "custom_string_obkoro1_copyright": "Copyright (c) ${now_year} by 514 Anti-Rolling Department, All Rights Reserved. "
    },
    // // 函数注释
    // "fileheader.cursorMode": {
    //     "description": "", // 函数注释生成之后，光标移动到这里
    //     "param": "", // param 开启函数参数自动提取 需要将光标放在函数行或者函数上方的空白行
    //     "return": "",
    // }
}
